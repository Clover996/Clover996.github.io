<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一位老程序员的感悟</title>
      <link href="/2023/01/11/%E4%B8%80%E4%BD%8D%E4%B8%89%E5%8D%81%E4%B8%89%E5%B2%81%E8%80%81%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%84%9F%E6%82%9F/"/>
      <url>/2023/01/11/%E4%B8%80%E4%BD%8D%E4%B8%89%E5%8D%81%E4%B8%89%E5%B2%81%E8%80%81%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%84%9F%E6%82%9F/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="一、在中国你千万不要以为学习技术就可以换来稳定的生活和高的薪水待遇，你更不要认为那些从事市场开发，跑腿的人，没有前途。"><a href="#一、在中国你千万不要以为学习技术就可以换来稳定的生活和高的薪水待遇，你更不要认为那些从事市场开发，跑腿的人，没有前途。" class="headerlink" title="一、在中国你千万不要以为学习技术就可以换来稳定的生活和高的薪水待遇，你更不要认为那些从事市场开发，跑腿的人，没有前途。"></a>一、在中国你千万不要以为学习技术就可以换来稳定的生活和高的薪水待遇，你更不要认为那些从事市场开发，跑腿的人，没有前途。</h1><p>不清楚你是不是知道，咱们中国有相当大的一部分软件公司，他们的软件开发团队都小的可怜，甚至只有1-3个人，连一个项目小组都算不上，而这样的团队却要承担一个软件公司所有的软件开发任务，在软件上线和开发的关键阶段需要团队的成员没日没夜的加班，还需要为测试出的BUG和不能按时提交的软件模块功能而心怀忐忑，有的时候如果你不幸加入现场开发的团队你则需要背井离乡告别你的女友，进行封闭开发，你平时除了编码之外就是吃饭和睡觉(有钱的公司甚至请个保姆为你做饭，以让你节省出更多的时间来投入到工作中，让你一直在那种累了就休息，不累就立即工作的状态)</p><p>更可怕的是，会让你接触的人际关系非常单一，除了有限的技术人员之外你几乎见不到做其他行业工作和职位的人，你的朋友圈子小且单一，甚至破坏你原有的爱情(想象一下，你在外地做现场开发2个月以上，却从没跟女友见过一面的话，你的女友是不是会对你呲牙裂嘴)。</p><p>也许你拿到了所谓的白领的工资，但你却从此失去享受生活的自由，如果你想做技术人员尤其是开发人员，我想你很快就会理解，你多么想在一个地方长期待一段时间，认识一些朋友，多一些生活时间的愿望。</p><p>比之于我们的生活和人际关系及工作，那些从事售前和市场开发的朋友，却有比我们多的多的工作之外的时间，甚至他们工作的时间有的时候是和生活的时间是可以兼顾的，他们可以通过市场开发，认识各个行业的人士，可以认识各种各样的朋友，他们比我们坦率说更有发财和发展的机会，只要他们跟我们一样勤奋。(有一种勤奋的普通人，如果给他换个地方，他马上会成为一个勤奋且出众的人。)</p><h1 id="二、在学习技术的时候千万不要认为如果做到技术最强，就可以成为100-受尊重的人。"><a href="#二、在学习技术的时候千万不要认为如果做到技术最强，就可以成为100-受尊重的人。" class="headerlink" title="二、在学习技术的时候千万不要认为如果做到技术最强，就可以成为100%受尊重的人。"></a>二、在学习技术的时候千万不要认为如果做到技术最强，就可以成为100%受尊重的人。</h1><p>有一次一个人在面试项目经理的时候说了这么一段话：我只用最听话的人，按照我的要求做只要是听话就要，如果不听话不管他技术再好也不要。随后这个人得到了试用机会，如果没意外的话，他一定会是下一个项目经理的继任者。</p><p>朋友们你知道吗?不管你技术有多强，你也不可能自由的腾出时间象别人那样研究一下LINUX源码，甚至写一个LINUX样的杰作来表现你的才能。需要做的就是按照要求写代码，写代码的含义就是都规定好，你按照规定写，你很快就会发现你昨天写的代码，跟今天写的代码有很多类似，<strong>等你写过一段时间的代码，你将领略：复制，拷贝，粘贴那样的技术对你来说是何等重要。(如果你没有做过1年以上的真正意义上的开发不要反驳我)。</strong></p><p>如果你幸运的能够听到市场人员的谈话，或是领导们的谈话，你会隐约觉得他们都在把技术人员当作编码的机器来看，你的价值并没有你想象的那么重要。而在你所在的团队内部，你可能正在为一个技术问题的讨论再跟同事搞内耗，因为他不服你，你也不服他，你们都认为自己的对，其实你们两个都对，而争论的目的就是为了在关键场合证明一下自己比对方技术好，比对方强。(在一个项目开发中，没有人愿意长期听别人的，总想换个位置领导别人。)</p><h1 id="三、你更不要认为，如果我技术够好，我就自己创业，自己有创业的资本，因为自己是搞技术的。"><a href="#三、你更不要认为，如果我技术够好，我就自己创业，自己有创业的资本，因为自己是搞技术的。" class="headerlink" title="三、你更不要认为，如果我技术够好，我就自己创业，自己有创业的资本，因为自己是搞技术的。"></a>三、你更不要认为，如果我技术够好，我就自己创业，自己有创业的资本，因为自己是搞技术的。</h1><p>如果你那样认为，真的是大错特错了，你可以做个调查在非技术人群中，没有几个人知道C#与JAVA的，更谈不上来欣赏你的技术是好还是不好。<strong>一句话，技术仅仅是一个工具，善于运用这个工具为别人干活的人，却往往不太擅长用这个工具来为自己创业，因为这是两个概念，训练的技能也是完全不同的。</strong></p><p>创业最开始的时候，你的人际关系，你处理人际关系的能力，你对社会潜规则的认识，还有你明白不明白别人的心，你会不会说让人喜欢的话，还有你对自己所提供的服务的策划和推销等等，也许有一万，一百万个值得我们重视的问题，但你会发现技术却很少有可能包含在这一万或一百万之内，如果你创业到了一个快成功的阶段，你会这样告诉自己：我干吗要亲自做技术，我聘一个人不就行了，这时候你才真正会理解技术的作用，和你以前做技术人员的作用。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>基于上面的讨论，我奉劝那些学习技术的朋友，千万不要拿科举考试样的心态去学习技术,对技术的学习几近的痴迷，想掌握所有所有的技术，以让自己成为技术领域的权威和专家，以在必要的时候或是心里不畅快的时候到网上对着菜鸟说自己是前辈。</p><p><strong>技术仅仅是一个工具，是你在人生一个阶段生存的工具，你可以一辈子喜欢他，但最好不要一辈子靠它生存。</strong></p><p><strong>掌握技术的唯一目的就是拿它找工作(如果你不想把技术当作你第二生命的话)，就是干活。所以你在学习的时候千万不要去做那些所谓的技术习题或是研究那些帽泡算法，最大数算法了，什么叫干活?</strong></p><p>就是做一个东西让别人用，别人用了，可以提高他们的工作效率，想象吧，你做1万道技术习题有什么用?只会让人觉得酸腐，还是在学习的时候，多培养些自己务实的态度吧，比如研究一下当地市场目前有哪些软件公司用人，自己离他们的要求到底有多远，自己具体应该怎么做才可以达到他们的要求。等你分析完这些，你就会发现，找工作成功，技术的贡献率其实并没有你原来想象的那么高。</p><p>不管你是学习技术为了找工作还是创业，你都要对技术本身有个清醒的认识，在中国不会出现Bill Gates，因为，中国目前还不是十分的尊重技术人才，还仅仅的停留在把软件技术人才当作人才机器来用的尴尬境地。(如果你不理解，一种可能是你目前仅仅从事过技术工作，你的朋友圈子里技术类的朋友占了大多数，一种可能是你还没有工作，但喜欢读比尔·盖茨的传记)。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>“千万不要一辈子靠技术生存”，这是一句比较现实的话。很多人觉得自己现在20多岁，月入2~3W或者更多了，很OK呀。</p><p>理解这句话的前提是，你不满足于现在的收入（如果是工作年限比较短的，你可以看看这个行业做的比较好的人的收入，你能否满足），对自己的未来或者行业有感到担忧，那么你才能很好的理解这句话。</p><p>这也是为什么能理解这句话的人，大多是到了35岁左右的。诚然，对于一个工作7、8年或者不到的程序员，这个阶段技术是必须的，要深、要有一个今天被开，我可以保证明天找到工作的技术能力； 如果你足够幸运，能有在某一个领域做到专家级的、后面的小辈无法替代你，那”千万不要一辈子靠技术生存”这句话当然也就不适合你了，大牛，请受吾一拜。 但是，对于大多数人，都无法做到在一个领域无可替代（机遇与天赋），那么就要想办法保证在上了年纪、上有老下有下的时候不被公司裁掉、收入不减、生活质量不降。</p><p>如果在这个阶段你还在研究这个功能怎么实现、这个算法是多么的精妙，我觉得你不是太单纯，就是在借技术之名在逃避现实。 说一句庸俗的话，我满脑子想得都是怎么搞钱，怎么让家人生活的更好，做技术的在35岁之前没达到这一点（且不论财务自由），你觉得35岁以后还有机会吗？或者说扪心自问一下，你所做的事情有多少是你能做，别人不能做的，有多少技术含量自己心里应该也有点数。 所以，技术只是现阶段谋生的一项技能。</p><p>每个人的技术都是有天花板的，你的技术到了天花板的时候，你的收入能否满足你，这个是需要考虑的。当然，你家里有矿或者北京二环内有几套房，那你完全可以把技术当爱好。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 人生 </tag>
            
            <tag> 收藏 </tag>
            
            <tag> Financial Freedom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名、备案、ssl</title>
      <link href="/2022/12/05/%E5%9F%9F%E5%90%8D-%E5%A4%87%E6%A1%88-ssl/"/>
      <url>/2022/12/05/%E5%9F%9F%E5%90%8D-%E5%A4%87%E6%A1%88-ssl/</url>
      
        <content type="html"><![CDATA[<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>到云平台根据提示进行域名购买注册。。。。。。。。。。。。。</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>以阿里云为例：</p><p>进入域名控制台</p><p><img src="../../../../img/ECS.assets/image-20221213105756368.png" alt="image-20221213105756368"></p><p>选择域名，点击解析，参考下图添加记录</p><p><img src="../../../../img/ECS.assets/image-20221213110004048.png" alt="image-20221213110004048"></p><p>至此，在浏览器访问域名时，就会通过dns解析，访问到记录值所对应的服务器</p><p>注意：在未完成备案时，访问该域名大概率会失败，或许前几次可以成功</p><h2 id="ICP备案"><a href="#ICP备案" class="headerlink" title="ICP备案"></a>ICP备案</h2><p>在哪儿进行？：到阿里云或者腾讯云亦或者其他平台，皆可</p><p>怎么操作？：找到备案入口，根据提示进行一步步操作即可</p><p>需要注意什么？：提交备案信息过程中可能会有平台电话来访，注意及时接听。</p><p>耗时多久？：一般十五天左右，不同地区时间不同，我是耗了20天</p><p>另外，备案成功后 会提示让去做公安备案，这个可去可不去。</p><h2 id="ssl证书申请"><a href="#ssl证书申请" class="headerlink" title="ssl证书申请"></a>ssl证书申请</h2><p>同样到阿里云或者腾讯云都可以进行免费证书的申请，现目前2022-11-03 11:05:15两大平台都免费证书（限量20）可以申请</p><p>以阿里云为例</p><p>进入ssl证书控制台</p><p><img src="../../../../img/ECS.assets/image-20221213110831394.png" alt="image-20221213110831394"></p><p>点击创建证书-&gt;证书申请-&gt;根据提示进行操作（需要在域名解析处添加记录）。。。。。。</p><p>签发完成后，点击下载，即可获得证书文件</p><p><img src="../../../../img/ECS.assets/image-20221213111153558.png" alt="image-20221213111153558"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 备案 </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-butterfly部署</title>
      <link href="/2022/12/04/hexo-butterfly%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/12/04/hexo-butterfly%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-butterfly部署（windows）"><a href="#hexo-butterfly部署（windows）" class="headerlink" title="hexo-butterfly部署（windows）"></a>hexo-butterfly部署（windows）</h2><h3 id="一、服务器初始化配置"><a href="#一、服务器初始化配置" class="headerlink" title="一、服务器初始化配置"></a>一、服务器初始化配置</h3><p>​    实例密码、防火墙等</p><h3 id="二、安装环境"><a href="#二、安装环境" class="headerlink" title="二、安装环境"></a>二、安装环境</h3><h4 id="安装node-js、npm"><a href="#安装node-js、npm" class="headerlink" title="安装node.js、npm"></a>安装node.js、npm</h4><p><a href="https://nodejs.org/dist/v18.12.1/node-v18.12.1-x64.msi">https://nodejs.org/dist/v18.12.1/node-v18.12.1-x64.msi</a></p><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><ul><li><p>官网链接：</p><p><a href="https://github.com/git-for-windows/git/releases/download/v2.39.0.windows.1/Git-2.39.0-64-bit.exe">https://github.com/git-for-windows/git/releases/download/v2.39.0.windows.1/Git-2.39.0-64-bit.exe</a></p></li><li><p>国内镜像链接</p><p><a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.39.0.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.39.0.windows.1/</a></p></li></ul><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><p>官网下载</p><p><a href="https://nginx.org/download/nginx-1.20.2.zip">https://nginx.org/download/nginx-1.20.2.zip</a></p><p>解压，双击nginx.exe 启动，会闪现一个小黑框</p><p>服务器上访问<a href="http://localhost/">http://localhost:80</a>，出现Welcome to Nginx！ 即成功安装</p><p>打开任务管理器关闭nginx进程。</p><h5 id="nginx基础操作命令"><a href="#nginx基础操作命令" class="headerlink" title="nginx基础操作命令"></a>nginx基础操作命令</h5><p>没有配置环境变量的话需要在nginx文件夹下以 <code>./nginx</code> 代替<code>nginx</code></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">nginx.exe </span><br><span class="line"><span class="comment"># 或者 </span></span><br><span class="line">start nginx</span><br><span class="line"><span class="comment"># 关闭Nginx</span></span><br><span class="line"><span class="comment"># 快速停止nginx</span></span><br><span class="line">nginx -s stop  </span><br><span class="line"><span class="comment"># 完整有序的停止nginx</span></span><br><span class="line">nginx -s quit</span><br><span class="line"><span class="comment"># 使用taskkill命令</span></span><br><span class="line">taskkill /f /t /im nginx.exe</span><br><span class="line"><span class="comment"># 重启（修改nginx.conf）</span></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h5 id="nginx配置环境变量"><a href="#nginx配置环境变量" class="headerlink" title="nginx配置环境变量"></a>nginx配置环境变量</h5><p><strong>系统变量——&gt; 环境配置——&gt;新建系统变量 NGINX_HOME</strong></p><p><img src="../../../../img/ECS.assets/image-20221213101126816.png" alt="image-20221213101126816"></p><p>然后将 <code>%NGINX_HOME%</code> 添加到系统变量PATH</p><h4 id="安装hexo相关环境"><a href="#安装hexo相关环境" class="headerlink" title="安装hexo相关环境"></a>安装hexo相关环境</h4><ul><li>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ul><li>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 <a href="https://github.com/hexojs/hexo-server">hexo-server</a>才能使用。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><ul><li>安装 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="三、nginx配置部署"><a href="#三、nginx配置部署" class="headerlink" title="三、nginx配置部署"></a>三、nginx配置部署</h3><p><img src="../../../../img/ECS.assets/image-20221213102310395.png" alt="image-20221213102310395"></p><p>1。项目文件放于html文件夹下</p><p><img src="../../../../img/ECS.assets/image-20221213102629342.png" alt="image-20221213102629342"></p><p>2。修改配置文件</p><p>用记事本儿打开conf/nginx.conf, 直接看server{。。。}</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;    <span class="comment"># 端口，ip后面不加端口号默认访问80端口</span></span><br><span class="line">        <span class="attribute">server_name</span>  localhost;  <span class="comment"># 服务器地址，填写公网ip 或者 域名</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">           <span class="comment"># root   html; # 项目文件根路径，修改为自己的路径</span></span><br><span class="line">            <span class="attribute">root</span> html/public; <span class="comment"># 到这里就已经可以通过 localhost 访问到项目资源了</span></span><br><span class="line">            </span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="如果-域名、ssl配好后"><a href="#如果-域名、ssl配好后" class="headerlink" title="如果 域名、ssl配好后"></a>如果 域名、ssl配好后</h4><p>参照如下规则配置</p><p>我这里是将ssl证书放在nginx/conf文件夹下</p><p><img src="../../../../img/ECS.assets/image-20221213104050711.png" alt="image-20221213104050711"></p><p>80端口的server</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  stophemo.top www.stophemo.top; <span class="comment"># 以空格分隔多个域名</span></span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span> https://<span class="variable">$&#123;server_name&#125;</span><span class="variable">$1</span> <span class="literal">permanent</span>; <span class="comment"># 将所有http请求转发到https，即 下一步配置的server</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>443 ssl 的 server</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span>  stophemo.top www.stophemo.top;</span><br><span class="line">        <span class="attribute">ssl_certificate</span>      stophemo.top/stophemo.top_bundle.pem;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span>  stophemo.top/stophemo.top.key;</span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   /www/wwwroot/public;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment"># 防止爬虫抓取 （可选）</span></span><br><span class="line">        <span class="attribute">if</span> (<span class="variable">$http_user_agent</span> <span class="regexp">~* &quot;360Spider|JikeSpider|Spider|spider|bot|Bot|2345Explorer|curl|wget|webZIP|qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo!</span> Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|NSPlayer|bingbot<span class="string">&quot;)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            return 403;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        error_page   500 502 503 504  /50x.html;</span></span><br><span class="line"><span class="string">        location = /50x.html &#123;</span></span><br><span class="line"><span class="string">            root   html;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br></pre></td></tr></table></figure><p>配置完成，重启nginx服务</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>浏览器访问域名地址，测试通过</p><p><img src="../../../../img/ECS.assets/image-20221213104602006.png" alt="image-20221213104602006"></p><h3 id="hexo-butterfly部署（linux）"><a href="#hexo-butterfly部署（linux）" class="headerlink" title="hexo-butterfly部署（linux）"></a>hexo-butterfly部署（linux）</h3><p>服务器配置同上，</p><p>安装环境的方式不一样</p><p>因为我用的宝塔面板安装的，没有的可以自行百度各个环境的安装教程</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署hexo的服务器配置</title>
      <link href="/2022/12/03/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/12/03/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="windows-server"><a href="#windows-server" class="headerlink" title="windows server"></a>windows server</h2><h3 id="控制台配置"><a href="#控制台配置" class="headerlink" title="控制台配置"></a>控制台配置</h3><ol><li>创建实例</li></ol><ol start="2"><li>配置实例名，描述等</li></ol><p>（配置安全组规则）</p><ol start="3"><li>5 min后重置实例密码</li></ol><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ol><li> 远程桌面连接（windows）： </li></ol><p>win + R ： mstsc </p><p>目标地址：服务器公网IP</p><p>用户名： administrator</p><p>密码：123456789</p><ol start="2"><li>ssh环境安装（可选）</li></ol><p>打开Windows Powershell（管理员）</p><ul><li>查看是否安装OpenSSH</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Get-WindowsCapability -Online | Where-Object Name -like &#x27;OpenSSH*&#x27;</span><br></pre></td></tr></table></figure><ul><li>安装ssh客户端</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0</span><br></pre></td></tr></table></figure><ul><li>安装ssh服务端</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0</span><br></pre></td></tr></table></figure><ul><li>启动并配置 OpenSSH 服务器</li></ul><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Start the sshd service</span></span><br><span class="line">Start-Service sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># OPTIONAL but recommended:</span></span><br><span class="line">Set-Service -Name sshd -StartupType <span class="string">&#x27;Automatic&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Confirm the Firewall rule is configured. It should be created automatically by setup. Run the following to verify</span></span><br><span class="line"><span class="keyword">if</span> (!(Get-NetFirewallRule -Name <span class="string">&quot;OpenSSH-Server-In-TCP&quot;</span> -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) &#123;</span><br><span class="line">    Write-Output <span class="string">&quot;Firewall Rule &#x27;OpenSSH-Server-In-TCP&#x27; does not exist, creating it...&quot;</span></span><br><span class="line">    New-NetFirewallRule -Name <span class="string">&#x27;OpenSSH-Server-In-TCP&#x27;</span> -DisplayName <span class="string">&#x27;OpenSSH Server (sshd)&#x27;</span> -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Write-Output <span class="string">&quot;Firewall rule &#x27;OpenSSH-Server-In-TCP&#x27; has been created and exists.&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>此时就可以在本地windows使用 ssh 登录服务器</p><p>记得去服务器开放22端口</p></li></ol><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh administrator@公网ip</span><br><span class="line">The authenticity of host <span class="string">&#x27;*.*.*.* (*.*.*.*)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ED25519 key fingerprint is SHA256:wW+kRmMmmB7Av0Ls7vqVU01jNM+GcOq8RVdSpdLUsdo.</span></span><br><span class="line"><span class="string">This key is not known by any other names</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>47.96.99.183<span class="string">&#x27; (ED25519) to the list of known hosts.</span></span><br><span class="line"><span class="string">administrator@*.*.*.*&#x27;</span>s password:</span><br></pre></td></tr></table></figure><p>登录成功</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">administrator@StophemoECS C:\Users\Administrator&gt;</span><br></pre></td></tr></table></figure><h2 id="linux-server"><a href="#linux-server" class="headerlink" title="linux server"></a>linux server</h2><h3 id="控制台配置-1"><a href="#控制台配置-1" class="headerlink" title="控制台配置"></a>控制台配置</h3><ol><li>同上</li></ol><h3 id="环境配置-1"><a href="#环境配置-1" class="headerlink" title="环境配置"></a>环境配置</h3><p>开启ssh服务。。。。。。。。。。。</p><p><code>ssh root@公网ip</code> 登录到服务器</p>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> windows </tag>
            
            <tag> linux </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
